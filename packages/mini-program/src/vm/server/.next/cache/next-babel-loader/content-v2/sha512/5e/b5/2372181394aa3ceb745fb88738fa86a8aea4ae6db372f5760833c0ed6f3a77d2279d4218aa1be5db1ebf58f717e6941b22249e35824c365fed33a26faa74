{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aniwei/Desktop/tickjs/packages/mini-program/src/vm/server/componnets/UIService/index.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { useScript } from '../../hooks/useScript';\nimport { useMessage } from '../../hooks/useMessage';\nexport function Service(props) {\n  useScript(`/uiservice`);\n  useScript(() => {\n    const {\n      onLoad\n    } = props;\n    onLoad();\n  });\n\n  const subscribeMethod = (...args) => {\n    const {\n      subscribeHandler\n    } = props;\n    subscribeHandler(...args);\n  };\n\n  useMessage(`webview.custom_event_GenerateFuncReady`, subscribeMethod);\n  useMessage(`webview.custom_event_PAGE_EVENT`, subscribeMethod);\n  useMessage(`webview.custom_event_initReady_getPerformance`, subscribeMethod);\n  useMessage(`webview.custom_event_vdSync`, subscribeMethod);\n  useMessage(`webview.custom_event_tapAnyWhere`, subscribeMethod);\n  return null;\n}\nexport class UIService extends Component {\n  constructor(..._args) {\n    super(..._args);\n\n    _defineProperty(this, \"subscribeHandler\", (...args) => {\n      WeixinJSBridge.invokeCallbackHandler(...args);\n    });\n\n    _defineProperty(this, \"invokeCallbackHandler\", (...args) => {\n      WeixinJSBridge.invokeCallbackHandler(...args);\n    });\n\n    _defineProperty(this, \"onLoad\", () => {\n      const {\n        onLoad\n      } = this.props;\n      onLoad();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Service, {\n      onLoad: this.onLoad,\n      subscribeHandler: this.subscribeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\n_defineProperty(UIService, \"defaultProps\", {\n  onLoad() {}\n\n});","map":{"version":3,"sources":["/Users/aniwei/Desktop/tickjs/packages/mini-program/src/vm/server/componnets/UIService/index.tsx"],"names":["Component","useScript","useMessage","Service","props","onLoad","subscribeMethod","args","subscribeHandler","UIService","WeixinJSBridge","invokeCallbackHandler","render"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAGA,OAAO,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;AAC9BH,EAAAA,SAAS,CAAE,YAAF,CAAT;AACAA,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEI,MAAAA;AAAF,QAAaD,KAAnB;AACAC,IAAAA,MAAM;AACP,GAHQ,CAAT;;AAKA,QAAMC,eAAe,GAAG,CAAC,GAAGC,IAAJ,KAAa;AACnC,UAAM;AAAEC,MAAAA;AAAF,QAAuBJ,KAA7B;AACAI,IAAAA,gBAAgB,CAAC,GAAGD,IAAJ,CAAhB;AACD,GAHD;;AAKAL,EAAAA,UAAU,CAAE,wCAAF,EAA2CI,eAA3C,CAAV;AACAJ,EAAAA,UAAU,CAAE,iCAAF,EAAoCI,eAApC,CAAV;AACAJ,EAAAA,UAAU,CAAE,+CAAF,EAAkDI,eAAlD,CAAV;AACAJ,EAAAA,UAAU,CAAE,6BAAF,EAAgCI,eAAhC,CAAV;AACAJ,EAAAA,UAAU,CAAE,kCAAF,EAAqCI,eAArC,CAAV;AAEA,SAAO,IAAP;AACD;AAMD,OAAO,MAAMG,SAAN,SAAwBT,SAAxB,CAA8C;AAAA;AAAA;;AAAA,8CAKhC,CAAC,GAAGO,IAAJ,KAAa;AAC9BG,MAAAA,cAAc,CAACC,qBAAf,CAAqC,GAAGJ,IAAxC;AACD,KAPkD;;AAAA,mDAS3B,CAAC,GAAGA,IAAJ,KAAa;AACnCG,MAAAA,cAAc,CAACC,qBAAf,CAAqC,GAAGJ,IAAxC;AACD,KAXkD;;AAAA,oCAa1C,MAAM;AACb,YAAM;AAAEF,QAAAA;AAAF,UAAa,KAAKD,KAAxB;AACAC,MAAAA,MAAM;AACP,KAhBkD;AAAA;;AAkBnDO,EAAAA,MAAM,GAAI;AACR,wBAAO,QAAC,OAAD;AACL,MAAA,MAAM,EAAE,KAAKP,MADR;AAEL,MAAA,gBAAgB,EAAE,KAAKG;AAFlB;AAAA;AAAA;AAAA;AAAA,YAAP;AAID;;AAvBkD;;gBAAxCC,S,kBACW;AACpBJ,EAAAA,MAAM,GAAI,CAAE;;AADQ,C","sourcesContent":["import { Component } from 'react';\nimport { useScript } from '../../hooks/useScript';\nimport { useMessage } from '../../hooks/useMessage';\n\n\nexport function Service (props) {\n  useScript(`/uiservice`);\n  useScript(() => {\n    const { onLoad } = props;\n    onLoad();\n  });\n\n  const subscribeMethod = (...args) => {\n    const { subscribeHandler } = props;\n    subscribeHandler(...args);\n  }\n\n  useMessage(`webview.custom_event_GenerateFuncReady`, subscribeMethod);\n  useMessage(`webview.custom_event_PAGE_EVENT`, subscribeMethod);\n  useMessage(`webview.custom_event_initReady_getPerformance`, subscribeMethod);\n  useMessage(`webview.custom_event_vdSync`, subscribeMethod);\n  useMessage(`webview.custom_event_tapAnyWhere`, subscribeMethod);\n  \n  return null;\n}\n\nexport interface IProps {\n  onLoad: Function | null;\n}\n\nexport class UIService extends Component<IProps, {}> {\n  static defaultProps = {\n    onLoad () {}\n  }\n\n  subscribeHandler = (...args) => {\n    WeixinJSBridge.invokeCallbackHandler(...args);\n  }\n\n  invokeCallbackHandler = (...args) => {\n    WeixinJSBridge.invokeCallbackHandler(...args);\n  }\n\n  onLoad = () => {\n    const { onLoad } = this.props;\n    onLoad();\n  }\n\n  render () {\n    return <Service \n      onLoad={this.onLoad}\n      subscribeHandler={this.subscribeHandler} \n    />\n  }\n}"]},"metadata":{},"sourceType":"module"}